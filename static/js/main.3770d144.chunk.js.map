{"version":3,"sources":["logo.svg","forms/reactformreg.js","App.js","reportWebVitals.js","index.js"],"names":["Reactformreg","useState","username","email","phone","password","userReginfo","setuserReginfo","record","setRecord","infoInput","a","name","target","value","console","log","className","action","onSubmit","preventDefault","subReg","id","Date","getTime","toString","htmlFor","type","autoComplete","onChange","map","curElem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAAe,I,kCCgFAA,EA9EM,WAEjB,MAAsCC,mBAAS,CAC3CC,SAAU,GACVC,MAAO,GACPC,MAAM,GACNC,SAAS,KAJb,mBAAOC,EAAP,KAAoBC,EAApB,KAOA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAW,SAACC,GACd,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvBC,QAAQC,IAAIJ,EAAME,GAElBP,EAAe,2BAAID,GAAL,kBAAmBM,EAAOE,MAY5C,OACI,sBAAKG,UAAU,UAAf,UACC,uBAAMC,OAAO,GAAGC,SAZA,SAACR,GAClBA,EAAES,iBAEF,IAAMC,EAAM,2BAAOf,GAAP,IAAoBgB,IAAI,IAAIC,MAAOC,UAAUC,aAEzDhB,EAAU,GAAD,mBAAKD,GAAL,CAAaa,KAEtBd,EAAe,CAACL,SAAU,GAAIC,MAAM,GAAIC,MAAM,GAAIC,SAAS,MAK1D,UACI,gCACI,uBAAOqB,QAAQ,WAAf,sBACA,uBAAOC,KAAK,OAAOC,aAAa,MAChCd,MAAOR,EAAYJ,SAAU2B,SAAUnB,EAAWE,KAAK,WAAWU,GAAG,gBAGzE,gCACI,uBAAOI,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOC,aAAa,MAAMd,MAAOR,EAAYH,MACxD0B,SAAUnB,EAAWE,KAAK,QAAQU,GAAG,aAG1C,gCACI,uBAAOI,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOC,aAAa,MAAMd,MAAOR,EAAYF,MACzDyB,SAAUnB,EAAWE,KAAK,QAAQU,GAAG,aAGzC,gCACI,uBAAOI,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,aAAa,MAAMd,MAAOR,EAAYD,SAC7DwB,SAAUnB,EAAWE,KAAK,WAAWU,GAAG,gBAG5C,wBAAQK,KAAK,SAAb,6BAGL,8BAEQnB,EAAOsB,KAAI,SAACC,GACR,IAAOT,EAAwCS,EAAxCT,GAAIpB,EAAoC6B,EAApC7B,SAAUC,EAA0B4B,EAA1B5B,MAAOC,EAAmB2B,EAAnB3B,MAAmB2B,EAAZ1B,SACnC,OACI,sBAAKY,UAAU,WAAf,UACI,4BAAIf,IACJ,4BAAIC,IACJ,4BAAIC,IACJ,4BAAID,MAJuBmB,YCxDxCU,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3770d144.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from 'react'\r\n\r\nconst Reactformreg = () => {\r\n\r\n    const [userReginfo, setuserReginfo] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        phone:\"\",\r\n        password:\"\"\r\n    });\r\n    \r\n    const [record, setRecord] = useState([]);\r\n\r\n    const infoInput =(a) => {\r\n        const name = a.target.name;\r\n        const value = a.target.value;\r\n        console.log(name, value);\r\n\r\n        setuserReginfo({...userReginfo, [name]: value });\r\n    }\r\n    const handelSubmit = (a) => {\r\n        a.preventDefault();\r\n\r\n        const subReg = {...userReginfo, id: new Date().getTime().toString() }\r\n\r\n        setRecord([...record, subReg ]);\r\n\r\n        setuserReginfo({username: \"\", email:\"\", phone:\"\", password:\"\" })\r\n    }\r\n\r\n    return (\r\n        <div className=\"bc_code\">\r\n         <form action=\"\" onSubmit={handelSubmit}>\r\n             <div>\r\n                 <label htmlFor=\"username\">Fullname</label> \r\n                 <input type=\"text\" autoComplete=\"off\" \r\n                 value={userReginfo.username} onChange={infoInput} name=\"username\" id=\"username\" />\r\n             </div>\r\n\r\n             <div>\r\n                 <label htmlFor=\"email\">email</label>\r\n                 <input type=\"text\" autoComplete=\"off\" value={userReginfo.email}\r\n                  onChange={infoInput} name=\"email\" id=\"email\" />\r\n             </div>\r\n\r\n             <div>\r\n                 <label htmlFor=\"phone\">phone</label>\r\n                 <input type=\"text\" autoComplete=\"off\" value={userReginfo.phone} \r\n                 onChange={infoInput} name=\"phone\" id=\"phone\" />\r\n             </div>\r\n\r\n             <div>\r\n                 <label htmlFor=\"password\">password</label>\r\n                 <input type=\"password\" autoComplete=\"off\" value={userReginfo.password} \r\n                 onChange={infoInput} name=\"password\" id=\"password\" />\r\n             </div>\r\n\r\n             <button type=\"submit\">Registration</button>\r\n         </form>  \r\n\r\n        <div>\r\n            {\r\n                record.map((curElem) => {\r\n                    const {id, username, email, phone, password} = curElem;\r\n                    return(\r\n                        <div className=\"showData\" key={id}>\r\n                            <p>{username}</p>\r\n                            <p>{email}</p>\r\n                            <p>{phone}</p>\r\n                            <p>{email}</p> \r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reactformreg\r\n\r\n","import logo from './logo.svg';\nimport Reactformreg from './forms/reactformreg'\n\nfunction App() {\n  return (\n    <Reactformreg />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}